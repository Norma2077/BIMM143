---
title: "class 10: Halloween Candy"
author: "Yinuo Song"
format: pdf
always_allow_html: yes
---

# 1. Importing candy data

```{r}
candy_file <- "candy-data.csv"
candy = read.csv("candy-data.csv", row.names=1)
head(candy)
```

Q1 How many different candy types are in this dataset?

```{r}
nrow(candy)
```

85 candy types.

Q2 How many fruity candy types are in the dataset?

```{r}
table(candy$fruity)
```

> 38 fruity candy types are in the dataset.

# 2. What is your favorate candy?

One of the most interesting variables in the dataset is `winpercent`. For a given candy this value is the percentage of people who prefer this candy over another randomly chosen candy from the dataset (what 538 term a matchup). Higher values indicate a more popular candy.

We can find the `winpercent` value for Twix by using its name to access the corresponding row of the dataset. This is because the dataset has each candy name as `rownames` (recall that we set this when we imported the original CSV file). For example the code for Twix is:

Q3 What is your favorite candy in the dataset and what is it's `winpercent` value?

```{r}
candy["Haribo Gold Bears",]$winpercent
```

Q4 What is the `winpercent` value for "Kit Kat"?

```{r}
candy["Kit Kat",]$winpercent
```

Q5 What is the `winpercent` value for "Tootsie Roll Snack Bars"?

```{r}
candy["Tootsie Roll Snack Bars",]$winpercent
```

**Side-note**: the skimr::skim() function

There is a useful `skim()` function in the **skimr** package that can help give you a quick overview of a given dataset. Let's install this package and try it on our candy data.

```{r}
##install.packages("skimr")
##library("skimr")
##skim(candy)
```

Q6 Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

The hist column looks like diagrams.

Q7 What do you think a zero and one represent for the `candy$chocolate` column?

1 means chocolate is used in this candy type.0 means chocolate is not used in this candy type.

A good place to start any exploratory analysis is with a histogram. You can do this most easily with the base R function `hist()`. Alternatively, you can use `ggplot()` with `geom_hist()`. Either works well in this case and (as always) its your choice.

```{r}
library(ggplot2)
```

Q8 Plot a histogram of `winpercent` values

```{r}
ggplot(candy,aes(candy$winpercent))+geom_histogram()
```

```{r}
hist(candy$winpercent)
```

Q9 Is the distribution of `winpercent` values symmetrical?

No

Q10 Is the center of the distribution above or below 50%?

below 50%

We want to conpare chocolated and fruity candy

```{r}
chocaolate_candy=candy$winpercetnt[as.logical(candy$chocolate)]
table
```

```{r}
winpercent_chocolate <- candy$winpercent[as.logical(candy$chocolate)]
```

```{r}
mean(winpercent_chocolate)
```

```{r}
winpercent_fruity <- candy$winpercent[as.logical(candy$fruity)]
mean(winpercent_fruity)
```

Statistical test

```{r}
t.test(winpercent_chocolate,winpercent_fruity)
```

```{r}
boxplot(winpercent_chocolate,winpercent_fruity)
```

Q11 On average is chocolate candy higher or lower ranked than fruit candy?

chocolate candy is higher ranked than fruit candy on average.

Q12 Is this difference statistically significant?

Yes, with a p-value \<0.05.

# 3. Overall Candy Rankings

Q13 What are the five least liked candy types in this set?

```{r}
head(candy[order(candy$winpercent),], n=5)
```

What are the top 5 all time favorite candy types out of this set?

```{r}
head(candy[order(candy$winpercent,decreasing=TRUE),], n=5)

```

Q15 Make a first barplot of candy ranking based on `winpercent` values.

```{r}
library(ggplot2)
ggplot(candy,aes(winpercent, rownames(candy))) +
  geom_col()
```

Q16 This is quite ugly, use the `reorder()` function to get the bars sorted by `winpercent`?

```{r}
ggplot(candy,aes(winpercent, reorder(rownames(candy),winpercent))) +
  geom_col()
```

Let's setup a color vector (that signifies candy type) that we can then use for some future plots. We start by making a vector of all black values (one for each candy). Then we overwrite chocolate (for chocolate candy), brown (for candy bars) and red (for fruity candy) values.

```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
```

Now let's try our barplot with these colors. Note that we use `fill=my_cols` for `geom_col()`. Experement to see what happens if you use `col=mycols`.

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols) 
```

Q17 What is the worst ranked chocolate candy?

Reese's Peanut Butter cup

Q18 What is the best ranked fruity candy?

Starbust

# 4. Taking a look at pricepercent

The `pricepercent` variable records the percentile rank of the candy's price against all the other candies in the dataset. Lower vales are less expensive and high values more expensive.

There is a regular `geom_label()` that comes with ggplot2. However, as there are quite a few candys in our dataset lots of these labels will be overlapping and hard to read. To help with this we can use the `geom_text_repel()` function from the **ggrepel** package.

```{r}
library(ggrepel)

# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=3.3, max.overlaps = 5)
```

Q19 Which candy type is the highest ranked in terms of `winpercent` for the least money - i.e. offers the most bang for your buck?

Reese's Miniatures

Q20 What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )

```

# 5 Exploring the correlation structure

Now that we've explored the dataset a little, we'll see how the variables interact with one another. We'll use correlation and view the results with the **corrplot** package to plot a correlation matrix.

```{r}
library(corrplot)
```

```{r}
cij <- cor(candy)
corrplot(cij)
```

Q22 Examining this plot what two variables are anti-correlated (i.e. have minus values)?

A red circle means two variables are anti-correlated.

Q23 Similarly, what two variables are most positively correlated?

"bar" and "chocolate".

# 6. Principal Component Analysis

Let's apply PCA using the `prcom()` function to our candy dataset remembering to set the `scale=TRUE` argument.

```{r}
pca <- prcomp(candy, scale=TRUE)
summary(pca)
```

```{r}
plot(pca$x[,1:2])
```

We can change the plotting character and add some color:

```{r}
plot(pca$x[,1:2], col=my_cols, pch=16)
```

we make a new data.frame here that contains our PCA results with all the rest of our candy data.

```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
```

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)

p
```

Again we can use the **ggrepel** package and the function `ggrepel::geom_text_repel()` to label up the plot with non overlapping candy names like. We will also add a title and subtitle like so:

```{r}
library(ggrepel)

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

more candy labels you can change the `max.overlaps` value to allow more overlapping labels or pass the ggplot object `p` to **plotly** like so to generate an interactive plot that you can mouse over to see labels:

```{r}
install.packages("plotly", repos = "http://cran.us.r-project.org")
library(plotly)
```

```{r}
ggplotly(p)
```

Let's finish by taking a quick look at PCA our loadings. Do these make sense to you? Notice the opposite effects of `chocolate` and `fruity` and the similar effects of `chocolate` and `bar` (i.e. we already know they are correlated).

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

Q24 What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

"fruity","hard" and "pluribus".

```{r}
pca$rotation[,1]
```

They make sense. There is positive correlation between "fruity" and "hard". And there are positive correlation between "fruity" and "pluribus".
